{"ast":null,"code":"const serverBaseUrl = \"http://localhost:4000/\";\nexport async function callAPI(method, uri, data = null, headers = null) {\n  try {\n    if (!headers) {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      };\n    }\n\n    let response = await fetch(\"\".concat(serverBaseUrl).concat(uri), {\n      method: method,\n      body: data,\n      headers: headers\n    });\n    let result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(\"Error\", error);\n  }\n}\nexport async function callGetAPI(method, uri, headers = null) {\n  try {\n    if (!headers) {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      };\n    }\n\n    let response = await fetch(\"\".concat(serverBaseUrl).concat(uri), {\n      method: method,\n      headers: headers\n    });\n    let result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(\"Error\", error);\n  }\n}","map":{"version":3,"sources":["/home/xelpmoc/projects/react-notes/src/apis/api.js"],"names":["serverBaseUrl","callAPI","method","uri","data","headers","Accept","response","fetch","body","result","json","error","console","log","callGetAPI"],"mappings":"AAAA,MAAMA,aAAa,GAAG,wBAAtB;AACA,OAAO,eAAeC,OAAf,CAAuBC,MAAvB,EAA+BC,GAA/B,EAAoCC,IAAI,GAAG,IAA3C,EAAiDC,OAAO,GAAG,IAA3D,EAAiE;AACtE,MAAI;AACF,QAAI,CAACA,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,kBADA;AAER,wBAAgB;AAFR,OAAV;AAID;;AACD,QAAIC,QAAQ,GAAG,MAAMC,KAAK,WAAIR,aAAJ,SAAoBG,GAApB,GAA2B;AACnDD,MAAAA,MAAM,EAAEA,MAD2C;AAEnDO,MAAAA,IAAI,EAAEL,IAF6C;AAGnDC,MAAAA,OAAO,EAAEA;AAH0C,KAA3B,CAA1B;AAKA,QAAIK,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,WAAOD,MAAP;AACD,GAdD,CAcE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD;AACF;AAED,OAAO,eAAeG,UAAf,CAA0Bb,MAA1B,EAAkCC,GAAlC,EAAuCE,OAAO,GAAG,IAAjD,EAAuD;AAC5D,MAAI;AACF,QAAI,CAACA,OAAL,EAAc;AACZA,MAAAA,OAAO,GAAG;AACRC,QAAAA,MAAM,EAAE,kBADA;AAER,wBAAgB;AAFR,OAAV;AAID;;AACD,QAAIC,QAAQ,GAAG,MAAMC,KAAK,WAAIR,aAAJ,SAAoBG,GAApB,GAA2B;AACnDD,MAAAA,MAAM,EAAEA,MAD2C;AAEnDG,MAAAA,OAAO,EAAEA;AAF0C,KAA3B,CAA1B;AAIA,QAAIK,MAAM,GAAG,MAAMH,QAAQ,CAACI,IAAT,EAAnB;AACA,WAAOD,MAAP;AACD,GAbD,CAaE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACD;AACF","sourcesContent":["const serverBaseUrl = \"http://localhost:4000/\";\nexport async function callAPI(method, uri, data = null, headers = null) {\n  try {\n    if (!headers) {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      };\n    }\n    let response = await fetch(`${serverBaseUrl}${uri}`, {\n      method: method,\n      body: data,\n      headers: headers\n    });\n    let result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(\"Error\", error);\n  }\n}\n\nexport async function callGetAPI(method, uri, headers = null) {\n  try {\n    if (!headers) {\n      headers = {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\"\n      };\n    }\n    let response = await fetch(`${serverBaseUrl}${uri}`, {\n      method: method,\n      headers: headers\n    });\n    let result = await response.json();\n    return result;\n  } catch (error) {\n    console.log(\"Error\", error);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}