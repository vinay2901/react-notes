{"ast":null,"code":"var _jsxFileName = \"/home/xelpmoc/projects/react-notes/src/components/Notes/AddNotes.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../Header/Header\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport Modal from \"../UI/Modal/Modal\";\nimport { callAPI } from \"../../apis/api\";\n\nclass AddNotes extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmission = async () => {\n      if (!this.title.value || !this.content.value) {\n        this.setState({\n          showModal: true,\n          message: \"FILL ALL FIELDS\"\n        });\n      } else {\n        let requestObject = {\n          title: this.username.value,\n          content: this.password.value\n        };\n        console.log(\"SEND THIS\", requestObject);\n        let token = localStorage.getItem(\"token\");\n        let result = await callAPI(\"POST\", \"login\", JSON.stringify(requestObject), {\n          token: token,\n          \"content-type\": \"application/json\"\n        });\n        console.log(\"RESULT\", result);\n\n        if (result._id) {\n          console.log(\"SUCCES99S\", result); //    this.setState({showModal:true,message:\"SUCCESS\"});\n\n          localStorage.setItem(\"token\", result.token);\n          this.props.history.push(\"/profile\"); // this.props.history.push(\"/profile\", {\n          //   isAuthenticated: true,\n          //   user: result\n          // });\n        } else {\n          console.log(\"ERROR\", result.error);\n          this.setState({\n            showModal: true,\n            message: result.error\n          });\n        }\n      }\n    };\n\n    this.state = {\n      isAuthenticated: true,\n      userDetails: \"\",\n      title: \"\",\n      content: \"\"\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Header, {\n      isAuthenticated: this.state.isAuthenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Form, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.showModal,\n      message: this.state.message,\n      modalClosed: this.hideModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }), React.createElement(Form.Group, {\n      controlId: \"noteTitle\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, \"Title\"), React.createElement(Form.Control, {\n      type: \"text\",\n      placeholder: \"Enter Note Title\",\n      ref: title => this.title = title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    })), React.createElement(Form.Group, {\n      controlId: \"noteContent\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(Form.Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"Content\"), React.createElement(Form.Control, {\n      as: \"textarea\",\n      rows: \"3\",\n      placeholder: \"put your content here\",\n      ref: content => this.content = content,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"primary\",\n      onClick: this.handleSubmission,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"Add\"))));\n  }\n\n}\n\nexport default AddNotes;","map":{"version":3,"sources":["/home/xelpmoc/projects/react-notes/src/components/Notes/AddNotes.js"],"names":["React","Component","Header","Form","Button","Container","Modal","callAPI","AddNotes","constructor","props","handleSubmission","title","value","content","setState","showModal","message","requestObject","username","password","console","log","token","localStorage","getItem","result","JSON","stringify","_id","setItem","history","push","error","state","isAuthenticated","userDetails","render","hideModalHandler"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../Header/Header\";\nimport { Form, Button, Container } from \"react-bootstrap\";\nimport Modal from \"../UI/Modal/Modal\";\nimport { callAPI } from \"../../apis/api\";\n\nclass AddNotes extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: true,\n      userDetails: \"\",\n      title: \"\",\n      content: \"\"\n    };\n  }\n\n  handleSubmission = async () => {\n    if (!this.title.value || !this.content.value) {\n      this.setState({ showModal: true, message: \"FILL ALL FIELDS\" });\n    } else {\n      let requestObject = {\n        title: this.username.value,\n        content: this.password.value\n      };\n      console.log(\"SEND THIS\", requestObject);\n      let token = localStorage.getItem(\"token\");\n      let result = await callAPI(\n        \"POST\",\n        \"login\",\n        JSON.stringify(requestObject),\n        {\n          token: token,\n          \"content-type\": \"application/json\"\n        }\n      );\n      console.log(\"RESULT\", result);\n\n      if (result._id) {\n        console.log(\"SUCCES99S\", result);\n        //    this.setState({showModal:true,message:\"SUCCESS\"});\n        localStorage.setItem(\"token\", result.token);\n        this.props.history.push(\"/profile\");\n        // this.props.history.push(\"/profile\", {\n        //   isAuthenticated: true,\n        //   user: result\n        // });\n      } else {\n        console.log(\"ERROR\", result.error);\n        this.setState({ showModal: true, message: result.error });\n      }\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <Header isAuthenticated={this.state.isAuthenticated} />\n        <Container>\n          <Form>\n            <Modal\n              show={this.state.showModal}\n              message={this.state.message}\n              modalClosed={this.hideModalHandler}\n            ></Modal>\n            <Form.Group controlId=\"noteTitle\">\n              <Form.Label>Title</Form.Label>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Enter Note Title\"\n                ref={title => (this.title = title)}\n              />\n            </Form.Group>\n\n            <Form.Group controlId=\"noteContent\">\n              <Form.Label>Content</Form.Label>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"3\"\n                placeholder=\"put your content here\"\n                ref={content => (this.content = content)}\n              />\n            </Form.Group>\n\n            <Button variant=\"primary\" onClick={this.handleSubmission}>\n              Add\n            </Button>\n          </Form>\n        </Container>\n      </div>\n    );\n  }\n}\nexport default AddNotes;\n"]},"metadata":{},"sourceType":"module"}