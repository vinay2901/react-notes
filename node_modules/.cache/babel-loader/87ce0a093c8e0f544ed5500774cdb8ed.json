{"ast":null,"code":"var _jsxFileName = \"/home/xelpmoc/projects/react-notes/src/components/Notes/Note.js\";\nimport React, { Component } from \"react\";\nimport Header from \"../Header/Header\";\nimport { Table, Button } from \"react-bootstrap\";\nimport NoteItem from \"./NoteItem\";\nimport { callGetAPI, callAPI } from \"../../apis/api\";\nimport PopUp from \"./PopUp\";\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteNoteHandler = async id => {\n      console.log(\"DELETE NOTES\", id);\n      let token = localStorage.getItem(\"token\");\n      let deletNote = await callAPI(\"DELETE\", \"note\", JSON.stringify({\n        id\n      }), {\n        token: token,\n        \"content-type\": \"application/json\"\n      }); // let response = await deletNote.json();\n\n      if (deletNote.message) {\n        let updateNotes = this.state.notes.filter(note => note._id != id);\n        this.setState({\n          notes: updateNotes\n        });\n      }\n    };\n\n    this.viewNoteHandler = async id => {\n      console.log(\"view NOTES\", id);\n      let token = localStorage.getItem(\"token\");\n      let details = await callGetAPI(\"GET\", \"note?id=\".concat(id), {\n        token: token,\n        \"content-type\": \"application/json\"\n      });\n      console.log(\"------\", details);\n\n      if (details.message == \"success\") {\n        this.setState({\n          noteDetails: details.notes,\n          showModal: true\n        });\n      }\n    };\n\n    this.editNoteHandler = id => {\n      console.log(\"EDIT NOTES\", id);\n    };\n\n    this.hideModalHandler = () => {\n      this.setState({\n        showModal: false\n      });\n    };\n\n    this.state = {\n      isAuthenticated: true,\n      notes: [{\n        _id: 1,\n        title: \"NOTE1\",\n        description: \"SSdfghjkliuyf nhguyfhj\"\n      }, {\n        _id: 2,\n        title: \"NOTE2\",\n        description: \"SSdfghjkliuyf nhguyfhj\"\n      }, {\n        _id: 3,\n        title: \"NOTE3\",\n        description: \"SSdfghjkliuyf nhguyfhj\"\n      }]\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"COMPONENET LOADED\");\n    let token = localStorage.getItem(\"token\");\n    let allNotes = await callGetAPI(\"GET\", \"notes\", {\n      token: token\n    });\n    this.setState({\n      notes: allNotes.notes\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, React.createElement(Header, {\n      isAuthenticated: this.state.isAuthenticated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }), React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \"MY NOTES\"), React.createElement(PopUp, {\n      show: this.state.showModal,\n      id: this.state.noteDetails && this.state.noteDetails._id,\n      title: this.state.noteDetails && this.state.noteDetails.title,\n      description: this.state.noteDetails && this.state.noteDetails.content,\n      modalClosed: this.hideModalHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }), React.createElement(Button, {\n      onClick: this.addNoteHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, \"ADD NOTE\"), React.createElement(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }, \"id\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, \"name\"), React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"action\"))), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.notes.map(note => {\n      return React.createElement(NoteItem, {\n        id: note._id,\n        title: note.title,\n        edit: this.editNoteHandler,\n        view: this.viewNoteHandler,\n        remove: this.deleteNoteHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      });\n    }))));\n  }\n\n}\n\nexport default Note;","map":{"version":3,"sources":["/home/xelpmoc/projects/react-notes/src/components/Notes/Note.js"],"names":["React","Component","Header","Table","Button","NoteItem","callGetAPI","callAPI","PopUp","Note","constructor","props","deleteNoteHandler","id","console","log","token","localStorage","getItem","deletNote","JSON","stringify","message","updateNotes","state","notes","filter","note","_id","setState","viewNoteHandler","details","noteDetails","showModal","editNoteHandler","hideModalHandler","isAuthenticated","title","description","componentDidMount","allNotes","render","content","addNoteHandler","map"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Header from \"../Header/Header\";\nimport { Table, Button } from \"react-bootstrap\";\nimport NoteItem from \"./NoteItem\";\nimport { callGetAPI, callAPI } from \"../../apis/api\";\nimport PopUp from \"./PopUp\";\n\nclass Note extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isAuthenticated: true,\n      notes: [\n        {\n          _id: 1,\n          title: \"NOTE1\",\n          description: \"SSdfghjkliuyf nhguyfhj\"\n        },\n        {\n          _id: 2,\n          title: \"NOTE2\",\n          description: \"SSdfghjkliuyf nhguyfhj\"\n        },\n        {\n          _id: 3,\n          title: \"NOTE3\",\n          description: \"SSdfghjkliuyf nhguyfhj\"\n        }\n      ]\n    };\n  }\n\n  async componentDidMount() {\n    console.log(\"COMPONENET LOADED\");\n    let token = localStorage.getItem(\"token\");\n\n    let allNotes = await callGetAPI(\"GET\", \"notes\", { token: token });\n    this.setState({ notes: allNotes.notes });\n  }\n\n  deleteNoteHandler = async id => {\n    console.log(\"DELETE NOTES\", id);\n    let token = localStorage.getItem(\"token\");\n\n    let deletNote = await callAPI(\"DELETE\", \"note\", JSON.stringify({ id }), {\n      token: token,\n      \"content-type\": \"application/json\"\n    });\n    // let response = await deletNote.json();\n    if (deletNote.message) {\n      let updateNotes = this.state.notes.filter(note => note._id != id);\n      this.setState({ notes: updateNotes });\n    }\n  };\n\n  viewNoteHandler = async id => {\n    console.log(\"view NOTES\", id);\n    let token = localStorage.getItem(\"token\");\n    let details = await callGetAPI(\"GET\", `note?id=${id}`, {\n      token: token,\n      \"content-type\": \"application/json\"\n    });\n    console.log(\"------\", details);\n    if (details.message == \"success\") {\n      this.setState({ noteDetails: details.notes, showModal: true });\n    }\n  };\n\n  editNoteHandler = id => {\n    console.log(\"EDIT NOTES\", id);\n  };\n\n  hideModalHandler = () => {\n    this.setState({ showModal: false });\n  };\n\n  render() {\n    return (\n      <div>\n        <Header isAuthenticated={this.state.isAuthenticated} />\n        <h1>MY NOTES</h1>\n        <PopUp\n          show={this.state.showModal}\n          id={this.state.noteDetails && this.state.noteDetails._id}\n          title={this.state.noteDetails && this.state.noteDetails.title}\n          description={this.state.noteDetails && this.state.noteDetails.content}\n          modalClosed={this.hideModalHandler}\n        ></PopUp>\n        <Button onClick={this.addNoteHandler}>ADD NOTE</Button>\n        <Table striped bordered hover>\n          <thead>\n            <tr>\n              <th>id</th>\n              <th>name</th>\n              <th>action</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.state.notes.map(note => {\n              return (\n                <NoteItem\n                  id={note._id}\n                  title={note.title}\n                  edit={this.editNoteHandler}\n                  view={this.viewNoteHandler}\n                  remove={this.deleteNoteHandler}\n                />\n              );\n            })}\n          </tbody>\n        </Table>\n      </div>\n    );\n  }\n}\n\nexport default Note;\n"]},"metadata":{},"sourceType":"module"}